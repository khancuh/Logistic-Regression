import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix

data = pd.read_csv('C:\\Users\\Imran\\Desktop\\Social_Network_Ads.csv')
data.head(10)

real_x = data.iloc[:,2:4].values
real_y = data.iloc[:,4].values

training_x,test_x,training_y,test_y = train_test_split(real_x,real_y,test_size=0.25,random_state=0)

scaler = StandardScaler()
training_x = scaler.fit_transform(training_x)
test_x = scaler.fit_transform(test_x)

classifier_LR = LogisticRegression(random_state=0)
classifier_LR.fit(training_x,training_y)

y_pred = classifier_LR.predict(test_x)
y_pred

test_y

c_m = confusion_matrix(test_y,y_pred)
c_m

from matplotlib.colors import ListedColormap
X_set, y_set = training_x, training_y
X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),
                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))
plt.contourf(X1, X2, classifier_LR.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),
             alpha = 0.75, cmap = ListedColormap(('red', 'green')))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())
for i, j in enumerate(np.unique(y_set)):
    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
                c = ListedColormap(('red', 'green'))(i), label = j)
plt.title('Logistic regression (training data sets)')
plt.xlabel('Age')
plt.ylabel('Salary')
plt.legend()
plt.show()


X_set, y_set = test_x, test_y
X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),
                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))
plt.contourf(X1, X2, classifier_LR.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),
             alpha = 0.75, cmap = ListedColormap(('red', 'green')))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())
for i, j in enumerate(np.unique(y_set)):
    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
                c = ListedColormap(('red', 'green'))(i), label = j)
plt.title('Logistic regression (testing data sets)')
plt.xlabel('Age')
plt.ylabel('Salary')
plt.legend()
plt.show()
